// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateAccessToken(ctx context.Context, arg CreateAccessTokenParams) error
	CreateAppToken(ctx context.Context, arg CreateAppTokenParams) (AppToken, error)
	CreateInstall(ctx context.Context, arg CreateInstallParams) (Install, error)
	CreateReport(ctx context.Context, arg CreateReportParams) (InstallReport, error)
	CreateReportEntry(ctx context.Context, arg CreateReportEntryParams) (InstallReportEntry, error)
	CreateReportPlugin(ctx context.Context, arg CreateReportPluginParams) (InstallReportEntryPlugin, error)
	CreateSnapshot(ctx context.Context, arg CreateSnapshotParams) (InstallSnapshot, error)
	CreateSnapshotHash(ctx context.Context, arg CreateSnapshotHashParams) (InstallSnapshotHashTree, error)
	CreateSnapshotPlugin(ctx context.Context, arg CreateSnapshotPluginParams) (InstallSnapshotPlugin, error)
	CreateUserAccount(ctx context.Context, arg CreateUserAccountParams) (UserAccount, error)
	GetAccessToken(ctx context.Context, token string) (AccessToken, error)
	GetAllInstallIdentifiers(ctx context.Context) ([]GetAllInstallIdentifiersRow, error)
	GetAllInstalls(ctx context.Context) ([]Install, error)
	GetAppToken(ctx context.Context, tokenID uuid.UUID) (AppToken, error)
	GetInstallByID(ctx context.Context, installID uuid.UUID) (Install, error)
	GetInstallByIdentifier(ctx context.Context, sshUsername string) (Install, error)
	GetInstallIDForReportID(ctx context.Context, reportID uuid.UUID) (uuid.UUID, error)
	GetLatestSnapshotForInstallID(ctx context.Context, installID uuid.UUID) (InstallSnapshot, error)
	GetReportEntriesForReport(ctx context.Context, reportID uuid.UUID) ([]InstallReportEntry, error)
	GetSnapshotHashes(ctx context.Context, snapshotID uuid.UUID) ([]InstallSnapshotHashTree, error)
	GetSnapshotPluginsForReport(ctx context.Context, snapshotID uuid.UUID) ([]InstallSnapshotPlugin, error)
	GetUserByEmail(ctx context.Context, email string) (UserAccount, error)
	GetUserByGoogleId(ctx context.Context, googleID string) (UserAccount, error)
	GetUserByID(ctx context.Context, userID uuid.UUID) (UserAccount, error)
	GetUserIDForToken(ctx context.Context, token string) (uuid.UUID, error)
}

var _ Querier = (*Queries)(nil)
