// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/google/uuid"
)

type AccessToken struct {
	Token     string    `json:"token"`
	UserID    uuid.UUID `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
	ExpiresAt time.Time `json:"expires_at"`
}

type AppToken struct {
	TokenID   uuid.UUID `json:"token_id"`
	CreatedAt time.Time `json:"created_at"`
	UserID    uuid.UUID `json:"user_id"`
}

type Install struct {
	InstallID   uuid.UUID    `json:"install_id"`
	Nicename    string       `json:"nicename"`
	SshUsername string       `json:"ssh_username"`
	SshPort     int32        `json:"ssh_port"`
	SshHostname string       `json:"ssh_hostname"`
	IsMultisite sql.NullBool `json:"is_multisite"`
}

type InstallReport struct {
	ReportID   uuid.UUID `json:"report_id"`
	InstallID  uuid.UUID `json:"install_id"`
	SnapshotID uuid.UUID `json:"snapshot_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type InstallReportEntry struct {
	EntryID      uuid.UUID `json:"entry_id"`
	ReportID     uuid.UUID `json:"report_id"`
	Filepath     string    `json:"filepath"`
	SnapshotHash string    `json:"snapshot_hash"`
	CurrentHash  string    `json:"current_hash"`
}

type InstallReportEntryPlugin struct {
	EntryID  uuid.UUID       `json:"entry_id"`
	ReportID uuid.UUID       `json:"report_id"`
	Slug     string          `json:"slug"`
	Issue    json.RawMessage `json:"issue"`
}

type InstallSnapshot struct {
	SnapshotID uuid.UUID `json:"snapshot_id"`
	InstallID  uuid.UUID `json:"install_id"`
	CreatedAt  time.Time `json:"created_at"`
	CreatedBy  uuid.UUID `json:"created_by"`
}

type InstallSnapshotHashTree struct {
	HashID     uuid.UUID `json:"hash_id"`
	SnapshotID uuid.UUID `json:"snapshot_id"`
	Filepath   string    `json:"filepath"`
	Filehash   string    `json:"filehash"`
}

type InstallSnapshotPlugin struct {
	PluginID   uuid.UUID `json:"plugin_id"`
	SnapshotID uuid.UUID `json:"snapshot_id"`
	Nicename   string    `json:"nicename"`
	Slug       string    `json:"slug"`
	Version    string    `json:"version"`
	Status     string    `json:"status"`
}

type UserAccount struct {
	UserID    uuid.UUID `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
	GoogleID  string    `json:"google_id"`
	Nicename  string    `json:"nicename"`
	Email     string    `json:"email"`
	Photo     string    `json:"photo"`
}
